<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>生产中harbor从http升级到https</title>
      <link href="/2023/11/29/harbor-%E4%BB%8Ehttp%E5%8D%87%E7%BA%A7%E5%88%B0https/"/>
      <url>/2023/11/29/harbor-%E4%BB%8Ehttp%E5%8D%87%E7%BA%A7%E5%88%B0https/</url>
      
        <content type="html"><![CDATA[<h1>生产中harbor从http升级到https</h1><h2 id="Generate-a-Certificate-Authority-Certificate">Generate a Certificate Authority Certificate</h2><p>In a production environment, you should obtain a certificate from a CA. In a test or development environment, you can generate your own CA. To generate a CA certficate, run the following commands.</p><ol><li><p>Generate a CA certificate private key.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /opt/cert</span><br><span class="line"><span class="built_in">cd</span> /opt/cert</span><br><span class="line">openssl genrsa -out ca.key 4096</span><br></pre></td></tr></table></figure></li><li><p>Generate the CA certificate.</p><p>Adapt the values in the <code>-subj</code> option to reflect your organization. If you use an FQDN to connect your Harbor host, you must specify it as the common name (<code>CN</code>) attribute.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">openssl req -x509 -new -nodes -sha512 -days 3650 \</span><br><span class="line"> -subj <span class="string">&quot;/C=CN/ST=Beijing/L=Beijing/O=example/OU=Personal/CN=10.165.6.63&quot;</span> \</span><br><span class="line"> -key ca.key \</span><br><span class="line"> -out ca.crt</span><br></pre></td></tr></table></figure></li></ol><h2 id="Generate-a-Server-Certificate">Generate a Server Certificate</h2><p>The certificate usually contains a <code>.crt</code> file and a <code>.key</code> file, for example, <code>10.165.6.63.crt</code> and <code>10.165.6.63.key</code>.</p><ol><li><p>Generate a private key.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out 10.165.6.63.key 4096</span><br></pre></td></tr></table></figure></li><li><p>Generate a certificate signing request (CSR).</p><p>Adapt the values in the <code>-subj</code> option to reflect your organization. If you use an FQDN to connect your Harbor host, you must specify it as the common name (<code>CN</code>) attribute and use it in the key and CSR filenames.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">openssl req -sha512 -new \</span><br><span class="line">    -subj <span class="string">&quot;/C=CN/ST=Beijing/L=Beijing/O=example/OU=Personal/CN=10.165.6.63&quot;</span> \</span><br><span class="line">    -key 10.165.6.63.key \</span><br><span class="line">    -out 10.165.6.63.csr</span><br></pre></td></tr></table></figure></li><li><p>Generate an x509 v3 extension file.</p><p>Regardless of whether you’re using either an FQDN or an IP address to connect to your Harbor host, you must create this file so that you can generate a certificate for your Harbor host that complies with the Subject Alternative Name (SAN) and x509 v3 extension requirements. Replace the <code>DNS</code> entries to reflect your domain.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; v3.ext &lt;&lt;-<span class="string">EOF</span></span><br><span class="line"><span class="string">authorityKeyIdentifier=keyid,issuer</span></span><br><span class="line"><span class="string">basicConstraints=CA:FALSE</span></span><br><span class="line"><span class="string">keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment</span></span><br><span class="line"><span class="string">extendedKeyUsage = serverAuth</span></span><br><span class="line"><span class="string">subjectAltName = @alt_names</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[alt_names]</span></span><br><span class="line"><span class="string">IP.1=10.165.6.63</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>重点是[alt_names]，这里写的ip地址是最后认证的，比较重要。端口不需要，一旦认证了ip以后所有端口都可以是https的</p><p>[alt_names]： 后面为备用名称列表，可以是域名、泛域名、IP地址</p></li><li><p>Use the <code>v3.ext</code> file to generate a certificate for your Harbor host.</p><p>Replace the <code>10.165.6.63</code> in the CRS and CRT file names with the Harbor host name.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -req -sha512 -days 3650 \</span><br><span class="line">    -extfile v3.ext \</span><br><span class="line">    -CA ca.crt -CAkey ca.key -CAcreateserial \</span><br><span class="line">    -<span class="keyword">in</span> 10.165.6.63.csr \</span><br><span class="line">    -out 10.165.6.63.crt</span><br></pre></td></tr></table></figure></li></ol><h2 id="Provide-the-Certificates-to-Harbor-and-Docker">Provide the Certificates to Harbor and Docker</h2><p>After generating the <code>ca.crt</code>, <code>10.165.6.63.crt</code>, and <code>10.165.6.63.key</code> files, you must provide them to Harbor and to Docker, and reconfigure Harbor to use them.</p><ol><li><p>Copy the server certificate and key into the certficates folder on your Harbor host.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> 10.165.6.63.crt /data/cert/</span><br><span class="line"><span class="built_in">cp</span> 10.165.6.63.key /data/cert/</span><br></pre></td></tr></table></figure></li><li><p>Convert <code>10.165.6.63.crt</code> to <code>10.165.6.63.cert</code>, for use by Docker.</p><p>The Docker daemon interprets <code>.crt</code> files as CA certificates and <code>.cert</code> files as client certificates.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -inform PEM -<span class="keyword">in</span> 10.165.6.63.crt -out 10.165.6.63.cert</span><br></pre></td></tr></table></figure></li><li><p>Copy the server certificate, key and CA files into the Docker certificates folder on the Harbor host. You must create the appropriate folders first.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> 10.165.6.63.cert /etc/docker/certs.d/10.165.6.63/</span><br><span class="line"><span class="built_in">cp</span> 10.165.6.63.key /etc/docker/certs.d/10.165.6.63/</span><br><span class="line"><span class="built_in">cp</span> ca.crt /etc/docker/certs.d/10.165.6.63/</span><br></pre></td></tr></table></figure><p>If you mapped the default <code>nginx</code> port 443 to a different port, create the folder <code>/etc/docker/certs.d/10.165.6.63:port</code>, or <code>/etc/docker/certs.d/harbor_IP:port</code>.</p></li><li><p>Restart Docker Engine.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure></li></ol><p>You might also need to trust the certificate at the OS level. See <a href="https://goharbor.io/docs/2.0.0/install-config/troubleshoot-installation/#https">Troubleshooting Harbor Installation</a> for more information.</p><p>The following example illustrates a configuration that uses custom certificates.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/etc/docker/certs.d/</span><br><span class="line">    └── 10.165.6.63:5000</span><br><span class="line">       ├── 10.165.6.63.cert  &lt;-- Server certificate signed by CA</span><br><span class="line">       ├── 10.165.6.63.key   &lt;-- Server key signed by CA</span><br><span class="line">       └── ca.crt               &lt;-- Certificate authority that signed the registry certificate</span><br></pre></td></tr></table></figure><h2 id="Deploy-or-Reconfigure-Harbor">Deploy or Reconfigure Harbor</h2><p>If you have not yet deployed Harbor, see <a href="https://goharbor.io/docs/2.0.0/install-config/configure-yml-file/">Configure the Harbor YML File</a> for information about how to configure Harbor to use the certificates by specifying the <code>hostname</code> and <code>https</code> attributes in <code>harbor.yml</code>.</p><p>If you already deployed Harbor with HTTP and want to reconfigure it to use HTTPS, perform the following steps.</p><ol><li><p>Run the <code>prepare</code> script to enable HTTPS.</p><p>Harbor uses an <code>nginx</code> instance as a reverse proxy for all services. You use the <code>prepare</code> script to configure <code>nginx</code> to use HTTPS. The <code>prepare</code> is in the Harbor installer bundle, at the same level as the <code>install.sh</code> script.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./prepare</span><br></pre></td></tr></table></figure></li><li><p>If Harbor is running, stop and remove the existing instance.</p><p>Your image data remains in the file system, so no data is lost.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose down -v</span><br></pre></td></tr></table></figure></li><li><p>Restart Harbor:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure></li></ol><h2 id="Verify-the-HTTPS-Connection">Verify the HTTPS Connection</h2><p>After setting up HTTPS for Harbor, you can verify the HTTPS connection by performing the following steps.</p><ul><li><p>Open a browser and enter <a href="https://10.165.6.63/">https://10.165.6.63</a>. It should display the Harbor interface.</p><p>Some browsers might show a warning stating that the Certificate Authority (CA) is unknown. This happens when using a self-signed CA that is not from a trusted third-party CA. You can import the CA to the browser to remove the warning.</p></li><li><p>On a machine that runs the Docker daemon, check the <code>/etc/docker/daemon.json</code> file to make sure that the <code>-insecure-registry</code> option is not set for <a href="https://10.165.6.63/">https://10.165.6.63</a>.</p></li><li><p>Log into Harbor from the Docker client.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker login 10.165.6.63:5000</span><br></pre></td></tr></table></figure><p>If you’ve mapped <code>nginx</code> 443 port to a different port,add the port in the <code>login</code> command.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker login 10.165.6.63:5000</span><br></pre></td></tr></table></figure></li></ul><h2 id=""></h2><p>升级完成。</p>]]></content>
      
      
      
        <tags>
            
            <tag> harbor </tag>
            
            <tag> http </tag>
            
            <tag> https </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>window下kubectl访问k8s集群</title>
      <link href="/2023/11/29/window%E4%B8%8B%E9%80%9A%E8%BF%87kubectl%E8%AE%BF%E9%97%AEk8s%E9%9B%86%E7%BE%A4/"/>
      <url>/2023/11/29/window%E4%B8%8B%E9%80%9A%E8%BF%87kubectl%E8%AE%BF%E9%97%AEk8s%E9%9B%86%E7%BE%A4/</url>
      
        <content type="html"><![CDATA[<h1>window下kubectl访问k8s集群</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl.exe -LO <span class="string">&quot;https://dl.k8s.io/release/v1.28.4/bin/windows/amd64/kubectl.exe&quot;</span></span><br></pre></td></tr></table></figure><h2 id="git-bash">git bash</h2><p>当前我的k8s是v1.20.11 版本所以下载如下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -LO <span class="string">&quot;https://dl.k8s.io/release/v1.20.11/bin/windows/amd64/kubectl.exe&quot;</span></span><br></pre></td></tr></table></figure><p>放入 gitbash 家目录的bin下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\git\Git\mingw64\bin</span><br></pre></td></tr></table></figure><p>然后导入配置文件，就可以访问集群了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">export kubeconfig=./config</span><br><span class="line">$ kubectl version</span><br><span class="line">Client Version: version.Info&#123;Major:&quot;1&quot;, Minor:&quot;20&quot;, GitVersion:&quot;v1.20.11&quot;, GitCommit:&quot;27522a29febbcc4badac257763044d0d90c11abd&quot;, GitTreeState:&quot;clean&quot;, BuildDate:&quot;2021-09-15T19:21:44Z&quot;, GoVersion:&quot;go1.15.15&quot;, Compiler:&quot;gc&quot;, Platform:&quot;windows/amd64&quot;&#125;</span><br><span class="line">Server Version: version.Info&#123;Major:&quot;1&quot;, Minor:&quot;20&quot;, GitVersion:&quot;v1.20.11&quot;, GitCommit:&quot;27522a29febbcc4badac257763044d0d90c11abd&quot;, GitTreeState:&quot;clean&quot;, BuildDate:&quot;2021-09-15T19:16:25Z&quot;, GoVersion:&quot;go1.15.15&quot;, Compiler:&quot;gc&quot;, Platform:&quot;linux/amd64&quot;&#125;</span><br><span class="line"></span><br><span class="line">$ kubectl get nodes</span><br><span class="line">NAME                  STATUS   ROLES                      AGE    VERSION</span><br><span class="line">fastdfs02             Ready    worker                     35d    v1.20.11</span><br><span class="line">k8s-master01          Ready    controlplane,etcd,worker   298d   v1.20.11</span><br><span class="line">k8s-master02          Ready    controlplane,etcd,worker   298d   v1.20.11</span><br><span class="line">k8s-master03          Ready    controlplane,etcd,worker   298d   v1.20.11</span><br><span class="line">node-jenkins-master   Ready    worker                     287d   v1.20.11</span><br><span class="line">node01                Ready    worker                     298d   v1.20.11</span><br><span class="line">node02                Ready    worker                     298d   v1.20.11</span><br><span class="line">node03                Ready    worker                     298d   v1.20.11</span><br><span class="line">node04                Ready    worker                     298d   v1.20.11</span><br><span class="line">node05                Ready    worker                     225d   v1.20.11</span><br><span class="line">node6                 Ready    worker                     176d   v1.20.11</span><br><span class="line">sky-es01              Ready    worker                     40d    v1.20.11</span><br><span class="line">sky-es02              Ready    worker                     40d    v1.20.11</span><br><span class="line">sky-es03              Ready    worker                     40d    v1.20.11</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> window, kubectl, k8s </tag>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新版单机fastdfs安装</title>
      <link href="/2023/10/24/%E6%96%B0%E7%89%88%E5%8D%95%E6%9C%BAfastdfs%E5%AE%89%E8%A3%85/"/>
      <url>/2023/10/24/%E6%96%B0%E7%89%88%E5%8D%95%E6%9C%BAfastdfs%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h2 id="1-拉取最新镜像">1, 拉取最新镜像</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker pull ygqygq2/fastdfs-nginx:V6.9.4</span><br><span class="line">docker tag ygqygq2/fastdfs-nginx:V6.9.4 192.168.0.79:5000/libray/fastdfs-nginx:V6.9.4</span><br><span class="line">docker push 192.168.0.79:5000/libray/fastdfs-nginx:V6.9.4</span><br></pre></td></tr></table></figure><h2 id="2-编写部署文件">2, 编写部署文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /opt/fastdfs</span><br><span class="line"><span class="built_in">cd</span> /opt/fastdfs</span><br><span class="line">vi docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">version: &#x27;3&#x27;</span><br><span class="line">#networks:</span><br><span class="line">#  fastdfs-net:</span><br><span class="line">#    external: true</span><br><span class="line">networks:</span><br><span class="line">  fastdfs-net:</span><br><span class="line">    driver: bridge</span><br><span class="line">services:</span><br><span class="line">  tracker:</span><br><span class="line">    container_name: tracker</span><br><span class="line">    image: 192.168.0.79:5000/library/fastdfs-nginx:V6.9.4 </span><br><span class="line">    command: tracker</span><br><span class="line">    #network_mode: host</span><br><span class="line">    networks:</span><br><span class="line">      - fastdfs-net</span><br><span class="line">    volumes:   </span><br><span class="line">      - /var/fdfs/tracker:/var/fdfs    </span><br><span class="line">    ports:</span><br><span class="line">      - 22122:22122</span><br><span class="line">  storage0:</span><br><span class="line">    container_name: storage0</span><br><span class="line">    image: 192.168.0.79:5000/library/fastdfs-nginx:V6.9.4 </span><br><span class="line">    command: storage</span><br><span class="line">    #network_mode: host  </span><br><span class="line">    networks:</span><br><span class="line">      - fastdfs-net</span><br><span class="line">    environment:</span><br><span class="line">      - TRACKER_SERVER=tracker:22122</span><br><span class="line">    volumes: </span><br><span class="line">      - /var/fdfs/storage0:/var/fdfs</span><br><span class="line">    ports:</span><br><span class="line">      - 28080:8080</span><br><span class="line">    depends_on:</span><br><span class="line">      - tracker</span><br><span class="line">  storage1:</span><br><span class="line">    container_name: storage1</span><br><span class="line">    image: 192.168.0.79:5000/library/fastdfs-nginx:V6.9.4 </span><br><span class="line">    command: storage</span><br><span class="line">    #network_mode: host  </span><br><span class="line">    networks:</span><br><span class="line">      - fastdfs-net</span><br><span class="line">    environment:</span><br><span class="line">      - TRACKER_SERVER=tracker:22122</span><br><span class="line">    volumes: </span><br><span class="line">      - /var/fdfs/storage1:/var/fdfs</span><br><span class="line">    ports:</span><br><span class="line">      - 28081:8080</span><br><span class="line">    depends_on:</span><br><span class="line">      - tracker</span><br></pre></td></tr></table></figure><h2 id="3-启动应用并验证">3, 启动应用并验证</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">docker compose up -d</span><br><span class="line"></span><br><span class="line">docker <span class="built_in">exec</span> -it tracker bash</span><br><span class="line">[root@936b4a677e5b fdfs]<span class="comment"># date &gt;aaa.txt</span></span><br><span class="line">[root@936b4a677e5b fdfs]<span class="comment"># fdfs_upload_file /etc/fdfs/client.conf  aaa.txt</span></span><br><span class="line">group1/M00/00/00/rBIAA2R-lRCAYKF3AAAAHVN3P3Y136.txt</span><br><span class="line"></span><br><span class="line">打开另一终端访问</span><br><span class="line">[root@fastdfs1 ~]<span class="comment"># curl localhost:28080/group1/M00/00/00/rBIAA2R-lRCAYKF3AAAAHVN3P3Y136.txt</span></span><br><span class="line">Tue Jun  6 02:07:29 UTC 2023</span><br><span class="line">[root@fastdfs1 ~]<span class="comment"># curl localhost:28081/group1/M00/00/00/rBIAA2R-lRCAYKF3AAAAHVN3P3Y136.txt</span></span><br><span class="line">Tue Jun  6 02:07:29 UTC 2023</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> fastdfs </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker-compose 安装fastdfs</title>
      <link href="/2023/10/24/%E6%97%A7%E7%89%88%E5%8D%95%E6%9C%BAfastdfs%E5%AE%89%E8%A3%85/"/>
      <url>/2023/10/24/%E6%97%A7%E7%89%88%E5%8D%95%E6%9C%BAfastdfs%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h2 id="1-配置docker-compose-yml">1, 配置docker-compose.yml</h2><p>mkdir -p /opt/fastdfs<br>cd /opt/fastdfs<br>vi docker-compose.yml</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">version: <span class="string">&#x27;2&#x27;</span></span><br><span class="line">services:</span><br><span class="line">    fastdfs-tracker:</span><br><span class="line">        hostname: fastdfs-tracker</span><br><span class="line">        container_name: fastdfs-tracker</span><br><span class="line">        image: season/fastdfs:1.2</span><br><span class="line">        network_mode: <span class="string">&quot;host&quot;</span></span><br><span class="line">        <span class="built_in">command</span>: tracker</span><br><span class="line">        volumes:</span><br><span class="line">          - ./tracker_data:/fastdfs/tracker/data</span><br><span class="line">    fastdfs-storage:</span><br><span class="line">        hostname: fastdfs-storage</span><br><span class="line">        container_name: fastdfs-storage</span><br><span class="line">        image: season/fastdfs:1.2</span><br><span class="line">        network_mode: <span class="string">&quot;host&quot;</span></span><br><span class="line">        volumes:</span><br><span class="line">          - ./storage_data:/fastdfs/storage/data</span><br><span class="line">          - ./store_path:/fastdfs/store_path</span><br><span class="line">        environment:</span><br><span class="line">          - TRACKER_SERVER=10.33.5.109:22122</span><br><span class="line">        <span class="built_in">command</span>: storage</span><br><span class="line">        depends_on:</span><br><span class="line">          - fastdfs-tracker</span><br><span class="line">    fastdfs-nginx:</span><br><span class="line">        hostname: fastdfs-nginx</span><br><span class="line">        container_name: fastdfs-nginx</span><br><span class="line">        image: season/fastdfs:1.2</span><br><span class="line">        network_mode: <span class="string">&quot;host&quot;</span></span><br><span class="line">        volumes:</span><br><span class="line">          - ./nginx.conf:/etc/nginx/conf/nginx.conf</span><br><span class="line">          - ./store_path:/fastdfs/store_path</span><br><span class="line">        environment:</span><br><span class="line">          - TRACKER_SERVER=10.33.5.109:22122</span><br><span class="line">        <span class="built_in">command</span>: nginx</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-编辑-nginx-conf">2, 编辑 nginx.conf</h2><p>vi nginx.conf</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#user  nobody;</span></span><br><span class="line">worker_processes  1;</span><br><span class="line"> </span><br><span class="line"><span class="comment">#error_log  logs/error.log;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  notice;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  info;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#pid        logs/nginx.pid;</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">#log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">#access_log  logs/access.log  main;</span></span><br><span class="line"> </span><br><span class="line">    sendfile        on;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">#keepalive_timeout  0;</span></span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"> </span><br><span class="line">    server &#123;</span><br><span class="line">        listen       7003;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line"> </span><br><span class="line">        <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"> </span><br><span class="line">        location /group1/M00 &#123;</span><br><span class="line">            root /fastdfs/storage/data;</span><br><span class="line">            ngx_fastdfs_module;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line"> </span><br><span class="line">        <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-启动fastDFS">3, 启动fastDFS</h2><p>docker-compose up -d</p><p>查看容器状态</p><p>docker-compose ps</p><h2 id="4-客户端测试">4, 客户端测试</h2><p>配置客户端访问</p><p>docker run -tid --name fdfs_sh -p 13000:13000 season/fastdfs sh<br>docker cp fdfs_sh:/fdfs_conf/client.conf ./</p><p>配置客户端</p><p>vi client.conf</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">base_path=/fastdfs</span><br><span class="line">tracker_server=10.33.5.109:22122</span><br></pre></td></tr></table></figure><p>重新配置客户端容器</p><p>docker rm -f fdfs_sh<br>docker run -tid -v /opt/fastdfs/client.conf:/fdfs_conf/client.conf --name fdfs_sh -p 13000:13000 season/fastdfs  sh</p><p>进入容器测试上传文件</p><p>docker exec -it fdfs_sh sh</p><p>生成文件并上传</p><p>echo hello&gt;b.txt<br>fdfs_upload_file /fdfs_conf/client.conf /b.txt</p><p>返回的文件地址<br>group1/M00/00/00/CiEFbWO_x2WAU2l6AAAABncc3SA269.txt</p><p>浏览器访问地址<br><a href="http://10.33.5.109:7003/group1/M00/00/00/CiEFbWO_x2WAU2l6AAAABncc3SA269.txt">http://10.33.5.109:7003/group1/M00/00/00/CiEFbWO_x2WAU2l6AAAABncc3SA269.txt</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> fastdfs </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos7部署高可用fastdfs</title>
      <link href="/2023/10/24/%E9%83%A8%E7%BD%B2%E9%AB%98%E5%8F%AF%E7%94%A8fastdfs/"/>
      <url>/2023/10/24/%E9%83%A8%E7%BD%B2%E9%AB%98%E5%8F%AF%E7%94%A8fastdfs/</url>
      
        <content type="html"><![CDATA[<h2 id="1，环境介绍">1，环境介绍</h2><p>由俩台服务器实现fastdfs的高可用</p><p>192.168.174.132     tracker，nginx，storage</p><p>192.168.174.150     tracker，nginx，storage</p><h2 id="2，初始化centos7">2，初始化centos7</h2><h3 id="2-1，关闭selinux">2.1，关闭selinux</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0</span><br><span class="line">sed -i <span class="string">&#x27;s/SELINUX=enforcing/SELINUX=disabled/g&#x27;</span> /etc/selinux/config</span><br></pre></td></tr></table></figure><h3 id="2-2-关闭防火墙">2.2,  关闭防火墙</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld &amp;&amp; systemctl <span class="built_in">disable</span> firewalld </span><br></pre></td></tr></table></figure><h3 id="2-3-配置时间同步">2.3,  配置时间同步</h3><p>storage 同步文件依赖时间戳，所以要保证所有服务器时间一致。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install -y chrony \</span><br><span class="line">&amp;&amp; systemctl start chronyd &amp;&amp; systemctl <span class="built_in">enable</span> chronyd \</span><br><span class="line">&amp;&amp; timedatectl set-timezone Asia/Shanghai &amp;&amp; timedatectl set-ntp <span class="built_in">yes</span> &amp;&amp;timedatectl set-local-rtc 0</span><br></pre></td></tr></table></figure><h3 id="2-4，配置limit">2.4，配置limit</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/security/limits.conf</span><br><span class="line">root soft nofile 65535</span><br><span class="line">root hard nofile 65535</span><br><span class="line"> * soft nofile 65535</span><br><span class="line"> * hard nofile 65535</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注：只配置最后两行不就可以了吗，为啥还要单独为root用户配置呢？查了网上资料，说是*这样的通配符对root用户无效，所以root需要单独配置</p><h2 id="3-高可用安装fastdfs">3, 高可用安装fastdfs</h2><h3 id="3-1-，生成安装路径">3.1 ，生成安装路径</h3><p>​    俩台服务器都创建目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/docker/fastdfs/tracker/data   #data为tracker基础数据存储目录</span><br><span class="line">mkdir -p /data/docker/fastdfs/storage/data     #data为storage基础数据</span><br><span class="line">mkdir -p /data/docker/fastdfs/upload/path&#123;0,1,2,3&#125; #存储上传的文件,当有多块硬盘时，挂载到相应目录上即可 /data/fastdfs/upload/path0~n</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-2，上传配置文件并修改配置">3.2，上传配置文件并修改配置</h3><p><a href="https://github.com/jiamiao442/fastdfs-nginx.git">https://github.com/jiamiao442/fastdfs-nginx.git</a></p><p>将配置文件fastdfs-conf中的文件上传到第一台服务器上/data/docker/fastdfs/ 目录中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-192-168-174-132 fastdfs]<span class="comment"># ls -F</span></span><br><span class="line">conf/  nginx_conf/  nginx_conf.d/  setting_conf.sh*  storage/  tracker/  upload/</span><br></pre></td></tr></table></figure><p>修改setting_conf.sh，主要修改以下几个参数，其他不变</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. tracker 主要参数，生产环境中建议更改一下端口</span></span><br><span class="line">tracker_port=22122</span><br><span class="line"><span class="comment"># 实现互备，两台tracker就够了</span></span><br><span class="line">tracker_server=<span class="string">&quot;tracker_server = 192.168.174.132:<span class="variable">$tracker_port</span>\ntracker_server = 192.168.174.150:<span class="variable">$tracker_port</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 格式：&lt;id&gt;  &lt;group_name&gt;  &lt;ip_or_hostname</span></span><br><span class="line">storage_ids=<span class="string">&quot;</span></span><br><span class="line"><span class="string">100001   group1  192.168.174.132</span></span><br><span class="line"><span class="string">100002   group1  192.168.174.150</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置tracker访问IP限制，避免谁都能上传文件，默认是allow_hosts = *</span></span><br><span class="line">allow_hosts=<span class="string">&quot;allow_hosts = 192.168.174.0/24\n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. local storage 主要参数，生产环境中建议更改一下端口</span></span><br><span class="line">storage_group_name=<span class="string">&quot;group1&quot;</span></span><br><span class="line">storage_server_port=23000</span><br><span class="line">store_path_count=1   <span class="comment">#文件存储目录的个数，存储目录约定为/data/fastdfs/upload/path0~n</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行脚本生成配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-192-168-174-132 fastdfs]<span class="comment"># bash setting_conf.sh </span></span><br><span class="line"> 请先设置好本脚本的tracker \ storage 的参数变量，然后再选择：</span><br><span class="line">  [1] 配置 tracker</span><br><span class="line">  </span><br><span class="line">  [2] 配置 storage</span><br><span class="line">please input number 1 to 2: 1</span><br><span class="line">  配置文件设置完毕，建议人工复核一下</span><br><span class="line">[root@ip-192-168-174-132 fastdfs]<span class="comment"># bash setting_conf.sh</span></span><br><span class="line"> 请先设置好本脚本的tracker \ storage 的参数变量，然后再选择：</span><br><span class="line">  [1] 配置 tracker</span><br><span class="line">  </span><br><span class="line">  [2] 配置 storage</span><br><span class="line">please input number 1 to 2: 2</span><br><span class="line">  配置文件设置完毕，建议人工复核一下</span><br><span class="line">[root@ip-192-168-174-132 fastdfs]<span class="comment"># </span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>检测没有问题后将配置文件复制到另一台服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">scp -r /data/docker/fastdfs/conf root@192.168.174.150:/data/docker/fastdfs/</span><br><span class="line">scp -r /data/docker/fastdfs/nginx_conf root@192.168.174.150:/data/docker/fastdfs/</span><br><span class="line">scp -r /data/docker/fastdfs/nginx_conf.d root@192.168.174.150:/data/docker/fastdfs/</span><br></pre></td></tr></table></figure><h3 id="3-3-启动tracker">3.3, 启动tracker</h3><p>两台同时启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --net=host  --restart=always --name=tracker  \</span><br><span class="line">-v /data/docker/fastdfs/tracker/data:/data/fastdfs_data \</span><br><span class="line">-v /data/docker/fastdfs/conf:/etc/fdfs \</span><br><span class="line"> jiamiao442/fastdfs-nginx:latest tracker</span><br></pre></td></tr></table></figure><h3 id="3-4-启动storage">3.4 启动storage</h3><p>两台同时启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --net=host --restart always --name=storage0 \</span><br><span class="line">--privileged=<span class="literal">true</span> \</span><br><span class="line">-v /data/docker/fastdfs/storage/data:/data/fastdfs_data \</span><br><span class="line">-v /data/docker/fastdfs/conf:/etc/fdfs \</span><br><span class="line">-v /data/docker/fastdfs/upload:/data/fastdfs/upload \</span><br><span class="line">-v /data/docker/fastdfs/nginx_conf/nginx.conf:/usr/local/nginx/conf/nginx.conf  \</span><br><span class="line">-v /data/docker/fastdfs/nginx_conf.d:/usr/local/nginx/conf.d  \</span><br><span class="line"> jiamiao442/fastdfs-nginx:latest storage</span><br></pre></td></tr></table></figure><h3 id="3-5-检查是否可用">3.5 检查是否可用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it storage0 sh</span><br><span class="line"></span><br><span class="line"><span class="built_in">date</span> &gt;aaa.txt</span><br><span class="line">fdfs_upload_file /etc/fdfs/client.conf aaa.txt </span><br><span class="line">group1/M00/00/00/oYYBAGR4VxSAdTkeAAAAHYhCyck239.txt </span><br><span class="line"></span><br><span class="line">浏览器访问</span><br><span class="line">http://192.168.174.132:9088/group1/M00/00/00/oYYBAGR4VxSAdTkeAAAAHYhCyck239.txt  </span><br><span class="line">http://192.168.174.150:9088/group1/M00/00/00/oYYBAGR4VxSAdTkeAAAAHYhCyck239.txt  </span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> fastdfs </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
